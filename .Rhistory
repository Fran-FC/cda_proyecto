source("~/muiinf/cda/trabajo/modelo/aemet_clustering.r", echo=TRUE)
library(jsonlite)
library("tidyverse")  # data manipulation
library("cluster")    # clustering algorithms
library("factoextra") # clustering algorithms & visualization
library(tidyverse)
library(caret)
library(ggplot2)
dt <- fromJSON("dataset/InfoRecortada.json")
df=dt %>% select(oscilacionTermica, temMed, rachMax, precMaxMen)
df <- as.data.frame(scale(df))
df <- na.omit(df)
# first analysis for clustering
x = c()
y = c()
for(i in 1:11) {
k2 <- kmeans(df, centers = i, nstart= 1)
x = append(x, i)
y = append(y, k2$tot.withinss)
# silhouette(x = k2$cluster, dist = )
}
p = plot(x, y, type="b", pch=16, col="red",
main ="Sum of withinss for each number of clusters")
fviz_nbclust(x=df,kmeans,method = c("wss"))
fviz_nbclust(x=df,kmeans,method = c("silhouette"))
# clean the data with no String varibles
#spain have 6 diferents
k2 <- kmeans(df, centers = 6, nstart = 25)
# uses PCA to plot the data
fviz_cluster(k2, df,
ellipse.type = "convex",
geom=c("point"),
palette = "jco",
ggtheme = theme_classic()) #you can change the color palette and theme to your preferences
# clean the data with no String varibles
#spain have 6 diferents
k2 <- kmeans(df, centers = 3, nstart = 25)
# uses PCA to plot the data
fviz_cluster(k2, df,
ellipse.type = "convex",
geom=c("point"),
palette = "jco",
ggtheme = theme_classic()) #you can change the color palette and theme to your preferences
View(k2)
View(df)
View(dt)
View(k2)
View(dt)
View(dt)
View(df)
View(df)
df$clima = k2$cluster
View(df)
dt$tipo_clima = k2$cluster
View(dt)
class(k2$cluster)
k2$cluster
dt$latitud
class(dt$temMax)
dt$temMax
list(k2$cluster)
dt$n = list(k2$cluster)
View(dt)
source("~/muiinf/cda/trabajo/modelo/aemet_clustering.r", echo=TRUE)
View(df)
class(dt)
class(df)
View(dt)
View(dt)
length(dt$latitud)
length(k2$cluster)
dt <- fromJSON("dataset/InfoRecortada.json")
df=dt %>% select(oscilacionTermica, temMed, rachMax, precMaxMen)
df <- napredict(df)
dt <- fromJSON("dataset/InfoRecortada.json")
df=dt %>% select(oscilacionTermica, temMed, rachMax, precMaxMen)
df <- as.data.frame(scale(df))
x = c()
y = c()
for(i in 1:11) {
k2 <- kmeans(df, centers = i, nstart= 1)
x = append(x, i)
y = append(y, k2$tot.withinss)
# silhouette(x = k2$cluster, dist = )
}
k2 <- kmeans(df, centers = i, nstart= 1)
fviz_nbclust(x=df,kmeans,method = c("wss"))
k2$cluster[1]
k2$cluster[2]
k2$cluster[0]
k2$cluster[1]
k2$cluster[1:]
k2$cluster[1][1]
k2$cluster[1][:1]
k2$cluster[1][1:]
dim(k2$cluster)
dim(k2$cluster[1])
width(k2$cluster[1])
length(k2$cluster[1])
class(k2$cluster[1])
k2$cluster[1])
k2$cluster[1]
traspose(2$cluster[1])
traspose(k2$cluster[1])
traspose(k2$cluster)
cl =k2$cluster
cl[1]
cl
cl[9]
cl[8]
cl[8]+1
row(cl[8])
data_frame[is.na(data_frame)] = 0
df <- as.data.frame(scale(df))
data_frame[is.na(data_frame)] = 0
replace(data_frame,is.na(data_frame),0)
dt <- fromJSON("dataset/InfoRecortada.json")
df=dt %>% select(oscilacionTermica, temMed, rachMax, precMaxMen)
df <- as.data.frame(scale(df))
replace(data_frame,is.na(data_frame),0)
replace(df,is.na(df),0)
df <- as.data.frame(scale(df))
df = replace(df,is.na(df),0)
View(df)
x = c()
y = c()
for(i in 1:11) {
k2 <- kmeans(df, centers = i, nstart= 1)
x = append(x, i)
y = append(y, k2$tot.withinss)
# silhouette(x = k2$cluster, dist = )
}
p = plot(x, y, type="b", pch=16, col="red",
main ="Sum of withinss for each number of clusters")
fviz_nbclust(x=df,kmeans,method = c("wss"))
fviz_nbclust(x=df,kmeans,method = c("silhouette"))
# clean the data with no String varibles
#spain have 6 diferents
k2 <- kmeans(df, centers = 3, nstart = 25)
# uses PCA to plot the data
fviz_cluster(k2, df,
ellipse.type = "convex",
geom=c("point"),
palette = "jco",
ggtheme = theme_classic()) #you can change the color palette and theme to your preferences
df$tipo_clima = k2$cluster
dt$tipo_clima = k2$cluster
